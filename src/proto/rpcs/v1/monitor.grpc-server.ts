// @generated by protobuf-ts 2.9.0 with parameter generate_dependencies,long_type_string,server_grpc1
// @generated from protobuf file "rpcs/v1/monitor.proto" (package "rpcs.v1", syntax proto3)
/* eslint-disable */
import { CheckResponse } from "./monitor";
import { CheckRequest } from "./monitor";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service rpcs.v1.MonitorService
 */
export interface IMonitorService extends grpc.UntypedServiceImplementation {
  /**
   * @generated from protobuf rpc: Check(rpcs.v1.CheckRequest) returns (rpcs.v1.CheckResponse);
   */
  check: grpc.handleUnaryCall<CheckRequest, CheckResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service rpcs.v1.MonitorService.
 *
 * Usage: Implement the interface IMonitorService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IMonitorService = ...
 * server.addService(monitorServiceDefinition, service);
 * ```
 */
export const monitorServiceDefinition: grpc.ServiceDefinition<IMonitorService> =
  {
    check: {
      path: "/rpcs.v1.MonitorService/Check",
      originalName: "Check",
      requestStream: false,
      responseStream: false,
      responseDeserialize: (bytes) => CheckResponse.fromBinary(bytes),
      requestDeserialize: (bytes) => CheckRequest.fromBinary(bytes),
      responseSerialize: (value) => Buffer.from(CheckResponse.toBinary(value)),
      requestSerialize: (value) => Buffer.from(CheckRequest.toBinary(value)),
    },
  };
